{"ast":null,"code":"var _jsxFileName = \"/home/fede459/Documentos/EDEP-MODULO 3/Proyectos/Challenge 01/src/components/ColorPicker.jsx\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from \"react\";\nimport Color from \"./Color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [{\n  id: 1,\n  name: 'Rojo',\n  hex: '#BF0603'\n}, {\n  id: 2,\n  name: 'Anaranjado',\n  hex: '#C43721'\n}, {\n  id: 3,\n  name: 'Amarillo',\n  hex: '#ffd60a'\n}]; //COMPONENTE FUNCIONAL\n\n/*\nconst ColorList = () => {\n\n    const [colorList, setColorList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const cargarColores = () => {\n        setIsLoading(true)\n        setTimeout(() => {\n            setColorList(colors)\n            setIsLoading(false)\n        }, 3000);\n    }\n    return (\n        <>\n            <button onClick={() => cargarColores()}>Click me</button>\n            {\n                isLoading &&\n                <h1>Loading</h1>}\n            <div>\n                {\n                    //map sirve para iterar una lista\n                    colorList.map(color =>\n                        <Color name={color.name} hex={color.hex} key={color.id} id={color.id} />\n                    )\n                }\n            </div>\n        </>\n    );\n}\n    */\n//COMPONENTE DE CLASE\n\n/* class ColorList extends Component {\n    constructor() {\n        super()\n        this.state = {\n            colorList: [],\n            isLoading: false\n        }\n    }\n    render() {\n                const cargarColores = () => {\n                    this.setState({ isLoading: true })\n                    setTimeout(() => {\n                        this.setState({\n                            colorList: colors,\n                            isLoading: false\n                        })\n                    }, 3000);\n                }\n                const { colorList, isLoading } = this.state\n                return (\n                    <>\n                        <button onClick={() => cargarColores()}>Click me</button>\n                        {\n                            isLoading &&\n                            <h1>Loading</h1>}\n                        <div>\n                            {\n                                //map sirve para iterar una lista\n                                colorList.map(color =>\n                                    <Color name={color.name} hex={color.hex} key={color.id} id={color.id} />\n                                )\n                            }\n                        </div>\n                    </>\n                );\n            }\n        \n        }\n         */\n\nconst ColorPicker = () => {\n  _s();\n\n  const [backgroundColor, setBackgroundColor] = useState('white');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    style: {\n      backgroundColor\n    },\n    children: colors.map(color => /*#__PURE__*/_jsxDEV(Color, {\n      hex: color.hex,\n      name: color.name,\n      setBackgroundColor: setBackgroundColor\n    }, color.hex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ColorPicker, \"e7mXx1ueLTqBourw//pNmellq48=\");\n\n_c = ColorPicker;\nexport default ColorPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorPicker\");","map":{"version":3,"names":["Component","useState","Color","colors","id","name","hex","ColorPicker","backgroundColor","setBackgroundColor","map","color"],"sources":["/home/fede459/Documentos/EDEP-MODULO 3/Proyectos/Challenge 01/src/components/ColorPicker.jsx"],"sourcesContent":["import { Component, useState } from \"react\";\nimport Color from \"./Color\";\n\nconst colors = [\n    {\n        id: 1,\n        name: 'Rojo',\n        hex: '#BF0603'\n    },\n    {\n        id: 2,\n        name: 'Anaranjado',\n        hex: '#C43721'\n    },\n    {\n        id: 3,\n        name: 'Amarillo',\n        hex: '#ffd60a'\n    }\n];\n//COMPONENTE FUNCIONAL\n/*\nconst ColorList = () => {\n\n    const [colorList, setColorList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const cargarColores = () => {\n        setIsLoading(true)\n        setTimeout(() => {\n            setColorList(colors)\n            setIsLoading(false)\n        }, 3000);\n    }\n    return (\n        <>\n            <button onClick={() => cargarColores()}>Click me</button>\n            {\n                isLoading &&\n                <h1>Loading</h1>}\n            <div>\n                {\n                    //map sirve para iterar una lista\n                    colorList.map(color =>\n                        <Color name={color.name} hex={color.hex} key={color.id} id={color.id} />\n                    )\n                }\n            </div>\n        </>\n    );\n}\n    */\n//COMPONENTE DE CLASE\n\n/* class ColorList extends Component {\n    constructor() {\n        super()\n        this.state = {\n            colorList: [],\n            isLoading: false\n        }\n    }\n    render() {\n                const cargarColores = () => {\n                    this.setState({ isLoading: true })\n                    setTimeout(() => {\n                        this.setState({\n                            colorList: colors,\n                            isLoading: false\n                        })\n                    }, 3000);\n                }\n                const { colorList, isLoading } = this.state\n                return (\n                    <>\n                        <button onClick={() => cargarColores()}>Click me</button>\n                        {\n                            isLoading &&\n                            <h1>Loading</h1>}\n                        <div>\n                            {\n                                //map sirve para iterar una lista\n                                colorList.map(color =>\n                                    <Color name={color.name} hex={color.hex} key={color.id} id={color.id} />\n                                )\n                            }\n                        </div>\n                    </>\n                );\n            }\n        \n        }\n         */\nconst ColorPicker = () => {\n    const [backgroundColor, setBackgroundColor] = useState('white')\n\n    return (\n        <div className='page' style={{ backgroundColor }}>\n            {\n                colors.map(color => (\n                    <Color key={color.hex} hex={color.hex} name={color.name} setBackgroundColor={setBackgroundColor} />\n                ))\n            }\n        </div>\n    )\n}\nexport default ColorPicker;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAM,GAAG,CACX;EACIC,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE,MAFV;EAGIC,GAAG,EAAE;AAHT,CADW,EAMX;EACIF,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE,YAFV;EAGIC,GAAG,EAAE;AAHT,CANW,EAWX;EACIF,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE,UAFV;EAGIC,GAAG,EAAE;AAHT,CAXW,CAAf,C,CAiBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,OAAD,CAAtD;EAEA,oBACI;IAAK,SAAS,EAAC,MAAf;IAAsB,KAAK,EAAE;MAAEO;IAAF,CAA7B;IAAA,UAEQL,MAAM,CAACO,GAAP,CAAWC,KAAK,iBACZ,QAAC,KAAD;MAAuB,GAAG,EAAEA,KAAK,CAACL,GAAlC;MAAuC,IAAI,EAAEK,KAAK,CAACN,IAAnD;MAAyD,kBAAkB,EAAEI;IAA7E,GAAYE,KAAK,CAACL,GAAlB;MAAA;MAAA;MAAA;IAAA,QADJ;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAZD;;GAAMC,W;;KAAAA,W;AAaN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}